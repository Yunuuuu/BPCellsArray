% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Class-Delayed.R, R/Method-BindMatrix.R,
%   R/Method-RenameDims.R, R/Method-Subset.R
\docType{class}
\name{BPCellsDelayedOp-class}
\alias{BPCellsDelayedOp-class}
\alias{as.matrix.BPCellsDelayedOp}
\alias{as.matrix,BPCellsDelayedOp-method}
\alias{as.array.BPCellsDelayedOp}
\alias{as.array,BPCellsDelayedOp-method}
\alias{type,BPCellsDelayedOp-method}
\alias{is_sparse,BPCellsDelayedOp-method}
\alias{extract_array,BPCellsDelayedOp-method}
\alias{OLD_extract_sparse_array,BPCellsDelayedOp-method}
\alias{extract_sparse_array,BPCellsDelayedOp-method}
\alias{dim,BPCellsDelayedOp-method}
\alias{dimnames,BPCellsDelayedOp-method}
\alias{t,BPCellsDelayedOp-method}
\alias{chunkdim,BPCellsDelayedOp-method}
\alias{is_noop,BPCellsDelayedAbind-method}
\alias{is_noop,BPCellsDelayedRenameDims-method}
\alias{is_noop,BPCellsDelayedSubset-method}
\title{BPCellsDelayedOp objects}
\usage{
\method{as.matrix}{BPCellsDelayedOp}(x)

\S4method{as.matrix}{BPCellsDelayedOp}(x)

\method{as.array}{BPCellsDelayedOp}(x, drop = FALSE)

\S4method{as.array}{BPCellsDelayedOp}(x, drop = FALSE)

\S4method{type}{BPCellsDelayedOp}(x)

\S4method{is_sparse}{BPCellsDelayedOp}(x)

\S4method{extract_array}{BPCellsDelayedOp}(x, index)

\S4method{OLD_extract_sparse_array}{BPCellsDelayedOp}(x, index)

\S4method{extract_sparse_array}{BPCellsDelayedOp}(x, index)

\S4method{dim}{BPCellsDelayedOp}(x)

\S4method{dimnames}{BPCellsDelayedOp}(x)

\S4method{t}{BPCellsDelayedOp}(x)

\S4method{chunkdim}{BPCellsDelayedOp}(x)

\S4method{is_noop}{BPCellsDelayedAbind}(x)

\S4method{is_noop}{BPCellsDelayedRenameDims}(x)

\S4method{is_noop}{BPCellsDelayedSubset}(x)
}
\arguments{
\item{x}{A \code{BPCellsDelayedOp} object.}

\item{drop}{A bool, if \code{TRUE}, any extents of length one will be removed and
return an atomic vector.}

\item{index}{
    An unnamed list of integer vectors, one per dimension in \code{x}.
    Each vector is called a \emph{subscript} and can only contain
    positive integers that are valid 1-based indices along the corresponding
    dimension in \code{x}.

    Empty or missing subscripts are allowed. They must be represented
    by list elements set to \code{integer(0)} or \code{NULL}, respectively.

    The subscripts cannot contain NAs or non-positive values.

    Individual subscripts are allowed to contain duplicated indices.
  }
}
\value{
\itemize{
\item \code{type}: A string, indicates the storage type. For all BPCells matrix type
of \code{float} and \code{double}, always return \code{double} since R cannot
differentiate 32-bit and 64-bit real number. See
\link[=convert_mode]{storage_mode}.
}

\itemize{
\item \code{extract_array}: A dense matrix.
}

\itemize{
\item \code{OLD_extract_sparse_array}: A
\link[DelayedArray:SparseArraySeed-class]{SparseArraySeed} object.
}

\itemize{
\item \code{extract_sparse_array}: A
\link[SparseArray:SVT_SparseArray-class]{SparseArray} object.
}

\itemize{
\item \code{is_sparse}: Always return \code{TRUE}.
}

\itemize{
\item \code{chunkdim}: the chunk dimensions in an integer vector parallel to \code{dim(x)}.
}
}
\description{
Provide a parallel \link[DelayedArray:DelayedOp-class]{DelayedOp} object
}
\note{
Just like \link[DelayedArray:DelayedOp-class]{DelayedOp} object, this is not
intented used by users directly.
}
