% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Class-BPCellsSeed.R
\docType{class}
\name{BPCellsSeed-class}
\alias{BPCellsSeed-class}
\alias{show,BPCellsSeed-method}
\alias{type,BPCellsSeed-method}
\alias{is_sparse,BPCellsSeed-method}
\alias{extract_array,BPCellsSeed-method}
\alias{extract_sparse_array,BPCellsSeed-method}
\title{Low-level Base Class for Delayed BPCells matrix}
\usage{
\S4method{show}{BPCellsSeed}(object)

\S4method{type}{BPCellsSeed}(x)

\S4method{is_sparse}{BPCellsSeed}(x)

\S4method{extract_array}{BPCellsSeed}(x, index)

\S4method{extract_sparse_array}{BPCellsSeed}(x, index)
}
\arguments{
\item{x, object}{A \code{BPCellsSeed} object.}

\item{index}{
    An unnamed list of integer vectors, one per dimension in \code{x}.
    Each vector is called a \emph{subscript} and can only contain
    positive integers that are valid 1-based indices along the corresponding
    dimension in \code{x}.

    Empty or missing subscripts are allowed. They must be represented
    by list elements set to \code{integer(0)} or \code{NULL}, respectively.

    The subscripts cannot contain NAs or non-positive values.

    Individual subscripts are allowed to contain duplicated indices.
  }
}
\value{
\itemize{
\item \code{type}: A string. For all BPCells matrix type of \code{float} and \code{double},
always return \code{double} since R cannot differentiate 32-bit and 64-bit real
number.
}

\itemize{
\item \code{is_sparse}: Always return \code{TRUE} for \code{BPCellsSeed} object.
}

\itemize{
\item \code{extract_array}: A dense matrix.
}

\itemize{
\item \code{extract_sparse_array}: A \link[DelayedArray:SparseArraySeed-class]{SparseArraySeed}
object.
}
}
\description{
The \code{BPCellsSeed} class just inherits from the \code{IterableMatrix} object in
BPCells package. The purpose for \code{BPCellsSeed} object is to provide the
common methods for all low-level BPCells seed objects. This page only list
basic methods for BPCellsSeed object, Please refer to \link{seed-methods} for
full methods list.
}
