% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R, R/Class-BPCellsSeed.R,
%   R/BPCellsSeed.R, R/Class-BPCellsMatrix.R, R/Class-BindMatrix.R,
%   R/Class-Convert.R, R/Class-Dir.R, R/Class-Mask.R, R/Class-Multiply.R,
%   R/Class-RankTransform.R, R/Class-RenameDims.R, R/Class-Subset.R,
%   R/Class-Transformed.R, R/Class-dgCMatrix.R, R/Transform-Binarize.R,
%   R/Transform-Round.R, R/Transform-expm1.R, R/Transform-expm1_slow.R,
%   R/Transform-log1p.R, R/Transform-log1p_slow.R, R/Transform-min_by_col.R,
%   R/Transform-min_by_row.R, R/Transform-min_scalar.R, R/Transform-pow.R,
%   R/Transform-pow_slow.R, R/Transform-square.R
\name{internal-methods}
\alias{internal-methods}
\alias{rbind2,ANY,BPCellsSeed-method}
\alias{rbind2,BPCellsSeed,ANY-method}
\alias{cbind2,ANY,BPCellsSeed-method}
\alias{cbind2,BPCellsSeed,ANY-method}
\alias{BPCellsSeed,Iterable_dgCMatrix_wrapper-method}
\alias{BPCellsSeed,TransformedMatrix-method}
\alias{BPCellsSeed,TransformLog1p-method}
\alias{BPCellsSeed,TransformLog1pSlow-method}
\alias{BPCellsSeed,TransformExpm1-method}
\alias{BPCellsSeed,TransformExpm1Slow-method}
\alias{BPCellsSeed,TransformSquare-method}
\alias{BPCellsSeed,TransformPow-method}
\alias{BPCellsSeed,TransformPowSlow-method}
\alias{BPCellsSeed,TransformMin-method}
\alias{BPCellsSeed,TransformMinByRow-method}
\alias{BPCellsSeed,TransformMinByCol-method}
\alias{BPCellsSeed,TransformBinarize-method}
\alias{BPCellsSeed,TransformRound-method}
\alias{rbind2,ANY,BPCellsMatrix-method}
\alias{rbind2,BPCellsMatrix,ANY-method}
\alias{cbind2,ANY,BPCellsMatrix-method}
\alias{cbind2,BPCellsMatrix,ANY-method}
\alias{[,BPCellsColBindMatrixSeed,ANY,ANY,ANY-method}
\alias{[,BPCellsRowBindMatrixSeed,ANY,ANY,ANY-method}
\alias{[,BPCellsConvertSeed,ANY,ANY,ANY-method}
\alias{convert_type,ANY-method}
\alias{[,BPCellsDirSeed,ANY,ANY,ANY-method}
\alias{[,BPCellsMaskSeed,ANY,ANY,ANY-method}
\alias{mask_matrix,ANY,ANY-method}
\alias{[,BPCellsMultiplySeed,ANY,ANY,ANY-method}
\alias{[,BPCellsRankTransformSeed,ANY,ANY,ANY-method}
\alias{rank_transform,ANY-method}
\alias{[,BPCellsRenameDimsSeed,ANY,ANY,ANY-method}
\alias{[,BPCellsSubsetSeed,ANY,ANY,ANY-method}
\alias{[,BPCellsTransformedSeed,ANY,ANY,ANY-method}
\alias{DelayedArray,BPCellsdgCMatrixSeed-method}
\alias{matrixClass,BPCellsdgCMatrixArray-method}
\alias{[,BPCellsdgCMatrixSeed,ANY,ANY,ANY-method}
\alias{DelayedArray,BPCellsTransformBinarizeSeed-method}
\alias{matrixClass,BPCellsTransformBinarizeArray-method}
\alias{DelayedArray,BPCellsTransformRoundSeed-method}
\alias{matrixClass,BPCellsTransformRoundArray-method}
\alias{DelayedArray,BPCellsTransformExpm1Seed-method}
\alias{matrixClass,BPCellsTransformExpm1Array-method}
\alias{DelayedArray,BPCellsTransformExpm1SlowSeed-method}
\alias{matrixClass,BPCellsTransformExpm1SlowArray-method}
\alias{DelayedArray,BPCellsTransformLog1pSeed-method}
\alias{matrixClass,BPCellsTransformLog1pArray-method}
\alias{DelayedArray,BPCellsTransformLog1pSlowSeed-method}
\alias{matrixClass,BPCellsTransformLog1pSlowArray-method}
\alias{DelayedArray,BPCellsTransformMinByColSeed-method}
\alias{matrixClass,BPCellsTransformMinByColArray-method}
\alias{DelayedArray,BPCellsTransformMinByRowSeed-method}
\alias{matrixClass,BPCellsTransformMinByRowArray-method}
\alias{DelayedArray,BPCellsTransformMinSeed-method}
\alias{matrixClass,BPCellsTransformMinArray-method}
\alias{DelayedArray,BPCellsTransformPowSeed-method}
\alias{matrixClass,BPCellsTransformPowArray-method}
\alias{DelayedArray,BPCellsTransformPowSlowSeed-method}
\alias{matrixClass,BPCellsTransformPowSlowArray-method}
\alias{DelayedArray,BPCellsTransformSquareSeed-method}
\alias{matrixClass,BPCellsTransformSquareArray-method}
\title{House of internal methods}
\usage{
\S4method{rbind2}{ANY,BPCellsSeed}(x, y, ...)

\S4method{rbind2}{BPCellsSeed,ANY}(x, y, ...)

\S4method{cbind2}{ANY,BPCellsSeed}(x, y, ...)

\S4method{cbind2}{BPCellsSeed,ANY}(x, y, ...)

\S4method{BPCellsSeed}{Iterable_dgCMatrix_wrapper}(x, ...)

\S4method{BPCellsSeed}{TransformedMatrix}(x, ...)

\S4method{BPCellsSeed}{TransformLog1p}(x, ...)

\S4method{BPCellsSeed}{TransformLog1pSlow}(x, ...)

\S4method{BPCellsSeed}{TransformExpm1}(x, ...)

\S4method{BPCellsSeed}{TransformExpm1Slow}(x, ...)

\S4method{BPCellsSeed}{TransformSquare}(x, ...)

\S4method{BPCellsSeed}{TransformPow}(x, ...)

\S4method{BPCellsSeed}{TransformPowSlow}(x, ...)

\S4method{BPCellsSeed}{TransformMin}(x, ...)

\S4method{BPCellsSeed}{TransformMinByRow}(x, ...)

\S4method{BPCellsSeed}{TransformMinByCol}(x, ...)

\S4method{BPCellsSeed}{TransformBinarize}(x, ...)

\S4method{BPCellsSeed}{TransformRound}(x, ...)

\S4method{rbind2}{ANY,BPCellsMatrix}(x, y, ...)

\S4method{rbind2}{BPCellsMatrix,ANY}(x, y, ...)

\S4method{cbind2}{ANY,BPCellsMatrix}(x, y, ...)

\S4method{cbind2}{BPCellsMatrix,ANY}(x, y, ...)

\S4method{[}{BPCellsColBindMatrixSeed,ANY,ANY,ANY}(x, i, j, ..., drop = FALSE)

\S4method{[}{BPCellsRowBindMatrixSeed,ANY,ANY,ANY}(x, i, j, ..., drop = FALSE)

\S4method{[}{BPCellsConvertSeed,ANY,ANY,ANY}(x, i, j, ..., drop = FALSE)

\S4method{convert_type}{ANY}(object, type)

\S4method{[}{BPCellsDirSeed,ANY,ANY,ANY}(x, i, j, ..., drop = FALSE)

\S4method{[}{BPCellsMaskSeed,ANY,ANY,ANY}(x, i, j, ..., drop = FALSE)

\S4method{mask_matrix}{ANY,ANY}(object, mask, invert = FALSE)

\S4method{[}{BPCellsMultiplySeed,ANY,ANY,ANY}(x, i, j, ..., drop = FALSE)

\S4method{[}{BPCellsRankTransformSeed,ANY,ANY,ANY}(x, i, j, ..., drop = FALSE)

\S4method{rank_transform}{ANY}(object, axis)

\S4method{[}{BPCellsRenameDimsSeed,ANY,ANY,ANY}(x, i, j, ..., drop = FALSE)

\S4method{[}{BPCellsSubsetSeed,ANY,ANY,ANY}(x, i, j, ..., drop = FALSE)

\S4method{[}{BPCellsTransformedSeed,ANY,ANY,ANY}(x, i, j, ..., drop = FALSE)

\S4method{DelayedArray}{BPCellsdgCMatrixSeed}(seed)

\S4method{matrixClass}{BPCellsdgCMatrixArray}(x)

\S4method{[}{BPCellsdgCMatrixSeed,ANY,ANY,ANY}(x, i, j, ..., drop = FALSE)

\S4method{DelayedArray}{BPCellsTransformBinarizeSeed}(seed)

\S4method{matrixClass}{BPCellsTransformBinarizeArray}(x)

\S4method{DelayedArray}{BPCellsTransformRoundSeed}(seed)

\S4method{matrixClass}{BPCellsTransformRoundArray}(x)

\S4method{DelayedArray}{BPCellsTransformExpm1Seed}(seed)

\S4method{matrixClass}{BPCellsTransformExpm1Array}(x)

\S4method{DelayedArray}{BPCellsTransformExpm1SlowSeed}(seed)

\S4method{matrixClass}{BPCellsTransformExpm1SlowArray}(x)

\S4method{DelayedArray}{BPCellsTransformLog1pSeed}(seed)

\S4method{matrixClass}{BPCellsTransformLog1pArray}(x)

\S4method{DelayedArray}{BPCellsTransformLog1pSlowSeed}(seed)

\S4method{matrixClass}{BPCellsTransformLog1pSlowArray}(x)

\S4method{DelayedArray}{BPCellsTransformMinByColSeed}(seed)

\S4method{matrixClass}{BPCellsTransformMinByColArray}(x)

\S4method{DelayedArray}{BPCellsTransformMinByRowSeed}(seed)

\S4method{matrixClass}{BPCellsTransformMinByRowArray}(x)

\S4method{DelayedArray}{BPCellsTransformMinSeed}(seed)

\S4method{matrixClass}{BPCellsTransformMinArray}(x)

\S4method{DelayedArray}{BPCellsTransformPowSeed}(seed)

\S4method{matrixClass}{BPCellsTransformPowArray}(x)

\S4method{DelayedArray}{BPCellsTransformPowSlowSeed}(seed)

\S4method{matrixClass}{BPCellsTransformPowSlowArray}(x)

\S4method{DelayedArray}{BPCellsTransformSquareSeed}(seed)

\S4method{matrixClass}{BPCellsTransformSquareArray}(x)
}
\arguments{
\item{...}{Ignored, Not used curretly.}

\item{seed}{A \code{BPCellsTransformSquareSeed} object.}
}
\description{
Following methods are used by package internal, for messages, or other
internal operations
}
